version: '3.9'

services:
  web:
    build:
      context: . # directory of file
      dockerfile: Dockerfile.backend # filename used to build container
    container_name: web
    environment:
      MONGO_URL: mongodb://admin:pass@mongo:27017/shopping-cart?authSource=admin # configures mongoDB using credentials 'admin' and 'pass'
    ports:
      - "3000:3000" # the first 3000 is the port on host machine, enabling the app to be accessable though 'localhost:3000'
      # the second 3000 is the port of the backend container, specified in Dockerfile.backend
    depends_on:
      - mongo # waits for mongoDB to be ready before running the container
    networks:
      - backend # connects to backend network so it can interact with other services, such as mongoDB

  frontend:
    build:
      context: . # directory of file
      dockerfile: Dockerfile.frontend # filename used to build container
    container_name: frontend
    ports:
      - "8081:80" # maps frontend to port 8081 so the frontend can be accessable through 'localhost:8081'
      # 80 is the default port for HTTP linking the container to the frontend container, specified in Dockerfile.frontend
    networks:
      - backend # link backend for communication with other services.

  mongo:
    image: mongo:latest # use latest mongo image
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin # sets username for mongoDB
      MONGO_INITDB_ROOT_PASSWORD: pass # sets password for mongoDB
    volumes:
      - mongo_data:/data/db # stores mongoDB data
    ports:
      - "27017:27017" # the first 27017 exposes port on the host machine so database can be accessed externally through localhost:27017
      # second 27017 links the mongoDB container
    networks:
      - backend # on backend network for communication with backend

  mongo-express:
    image: mongo-express:latest # use latest mongo express image, used for a web-based interface to view mongoDB
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo # points to mongoDB container
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin # username same as mongoDB container
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass # password same as mongoDB container
    ports:
      - "8080:8080" # the first 27017 exposes port on the host machine so database can be accessed externally through localhost:27017
      # second 27017 links the mongoDB container
    depends_on:
      - mongo # waits for mongoDB to be ready before running the container
    networks:
      - backend # connects to backend network so it can interact with other services, such as mongoDB

  nginx:
    image: nginx:latest # uses latest nginx image
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf #stores nginx.conf file into container
      - ./nginx/ssl/nginx.crt:/etc/nginx/ssl/localhost.crt #stores SSL certificates into container
      - ./nginx/ssl/nginx.key:/etc/nginx/ssl/localhost.key
    ports:
      - "443:443" # expores port 443 to host so nginx is accessable through HTTPS
    depends_on:
      - frontend # waits for frontend to be ready before running the container
    networks:
      - backend # connects to backend to route traffic

volumes:
  mongo_data:

networks:
  backend:
  frontend:
